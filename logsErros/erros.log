eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.T_EMP (
eng_pedido_link  |   PRIMARY KEY (empno)
eng_pedido_link  | )
eng_pedido_link  | SELECT no                                                            AS empno,
eng_pedido_link  |        name                                                          AS empName,
eng_pedido_link  |        sname                                                         AS empSname,
eng_pedido_link  |        trim(cast(CONCAT(CHAR(ascii(mid(pswd, 1, 1)) - 5), CHAR(ascii(mid(pswd, 2, 1)) - 7),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 3, 1)) - 8), CHAR(ascii(mid(pswd, 4, 1)) - 0),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 5, 1)) - 34), CHAR(ascii(mid(pswd, 6, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 7, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 8, 1)) - 13)) AS CHAR)) AS senha
eng_pedido_link  | FROM sqldados.emp
eng_pedido_link  | WHERE pswd <> ''
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TEMPORARY TABLE IF EXISTS sqldados.TPED
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TPED (
eng_pedido_link  |   PRIMARY KEY (storeno, ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT 'Link de pagamento loja ENGECOPI Ped MF'                                         AS note,
eng_pedido_link  |        eord.storeno,
eng_pedido_link  |        eord.ordno,
eng_pedido_link  |        CONCAT(eord.nfno, '/', eord.nfse)                                                AS NFiscal,
eng_pedido_link  |        CONCAT(eord.nfno_futura, '/', eord.nfse_futura)                                  AS NF_Fat,
eng_pedido_link  |        eord.amount                                                                      AS valor,
eng_pedido_link  |        IF(eord.other = 0, MID(eordrk.remarks__480, 7, 10), eord.other) / 100            AS frete,
eng_pedido_link  |        UPPER(TRIM(MID(eordrk.remarks__480, 160, 10)))                                   AS CARTAO,
eng_pedido_link  |        (eord.amount + IF(eord.other = 0, (MID(eordrk.remarks__480, 7, 2) * 100), eord.other)) /
eng_pedido_link  |        100                                                                              AS total,
eng_pedido_link  |        CONCAT(paym.no, '-', paym.sname)                                                 AS MET,
eng_pedido_link  |        emp.empno                                                                        AS empno,
eng_pedido_link  |        LPAD(emp.empSname, 10, ' ')                                                      AS VENDEDOR,
eng_pedido_link  |        IF(custp.auxString2 = 'J', LPAD(custp.tel, 9, ' '), LPAD(custp.celular, 9, ' ')) AS WHATSAPP,
eng_pedido_link  |        ifnull(custp.name, '*')                                                          AS CLIENTE,
eng_pedido_link  |        custp.no                                                                         AS CODCLI,
eng_pedido_link  |        eord.amount / 100                                                                AS amount,
eng_pedido_link  |        emp.senha                                                                        AS senha
eng_pedido_link  | FROM sqldados.eord
eng_pedido_link  |   LEFT JOIN sqldados.eoprd
eng_pedido_link  | 	      ON (eoprd.storeno = eord.storeno AND eoprd.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.prd
eng_pedido_link  | 	      ON (prd.no = eoprd.prdno)
eng_pedido_link  |   LEFT JOIN sqldados.custp
eng_pedido_link  | 	      ON (custp.no = eord.custno)
eng_pedido_link  |   LEFT JOIN sqldados.eordrk
eng_pedido_link  | 	      ON (eordrk.storeno = eord.storeno AND eordrk.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.paym
eng_pedido_link  | 	      ON (paym.no = eord.paymno)
eng_pedido_link  |   LEFT JOIN sqldados.T_EMP AS emp
eng_pedido_link  | 	      ON (emp.empno = eord.empno)
eng_pedido_link  | WHERE (eord.storeno = :storeno OR :storeno = 0)
eng_pedido_link  |   AND paym.sname LIKE '%LINK%'
eng_pedido_link  |   AND (eord.date >= :data)
eng_pedido_link  | GROUP BY eord.storeno, eord.ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TABLE IF EXISTS sqldados.TTEF
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TTEF (
eng_pedido_link  |   PRIMARY KEY (ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT MID(PEDIDO, 1, 2)                                   AS loja,
eng_pedido_link  |        MID(PEDIDO, 4, 100) * 1                             AS ordno,
eng_pedido_link  |        PEDIDO                                              AS PEDIDO,
eng_pedido_link  |        SUM(VALOR / 100)                                    AS VALOR,
eng_pedido_link  |        PARCELAS                                            AS PARCELAS,
eng_pedido_link  |        NOMEAUTORIZADORA                                    AS AUTORIZADORA,
eng_pedido_link  |        AUTORIZACAO                                         AS AUTORIZACAO,
eng_pedido_link  |        NSUHOST                                             AS NSUHOST,
eng_pedido_link  |        MAX(IF(STATUS IN ('CON', 'AGU'), STATUS, NULL))     AS statusCon,
eng_pedido_link  |        MAX(IF(STATUS NOT IN ('CON', 'AGU'), STATUS, NULL)) AS statusOut,
eng_pedido_link  | 
eng_pedido_link  |        cast(CONCAT(MID(DATACRIACAO, 7, 4), MID(DATACRIACAO, 4, 2), MID(DATACRIACAO, 1, 2)) *
eng_pedido_link  | 	    1 AS DATE)                                     AS DATACRIACAO
eng_pedido_link  | FROM sqldados.engecopi_tef_bruto AS B
eng_pedido_link  | WHERE nsu > date_format(:data, '%y%m%d') * 1000000000
eng_pedido_link  | GROUP BY ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | SELECT P.storeno                                                AS loja,
eng_pedido_link  |        P.ordno                                                  AS numPedido,
eng_pedido_link  |        IF(P.date = 0, NULL, cast(P.date AS DATE))               AS dataPedido,
eng_pedido_link  |        SEC_TO_TIME(P.l4)                                        AS horaPedido,
eng_pedido_link  |        P.paymno                                                 AS metodo,
eng_pedido_link  |        ifnull(cast(IFNULL(N.nfno, F.nfno) AS CHAR), '')         AS nfnoNota,
eng_pedido_link  |        IFNULL(IFNULL(N.nfse, F.nfse), '')                       AS nfseNota,
eng_pedido_link  |        if(IFNULL(N.issuedate, F.issuedate) = 0, NULL,
eng_pedido_link  | 	  cast(IFNULL(N.issuedate, F.issuedate) AS DATE))       AS dataNota,
eng_pedido_link  |        sec_to_time(IFNULL(N2.auxLong4, F2.auxLong4))            AS horaNota,
eng_pedido_link  |        IFNULL(U.name, '')                                       AS username,
eng_pedido_link  |        cast(if(P.l15 = 0, NULL, P.l15) AS DATE)                 AS dataLink,
eng_pedido_link  |        IF(P.l16 = 0, cast(NULL AS TIME), sec_to_time(P.l16))    AS horaLink,
eng_pedido_link  |        note                                                     AS nota,
eng_pedido_link  |        frete                                                    AS valorFrete,
eng_pedido_link  |        IF(frete IS NULL, TPED.amount, total)                    AS total,
eng_pedido_link  |        IFNULL(T.VALOR, 0.00)                                    AS valorLink,
eng_pedido_link  |        cartao                                                   AS cartao,
eng_pedido_link  |        cast(WHATSAPP AS CHAR)                                   AS whatsapp,
eng_pedido_link  |        CLIENTE                                                  AS cliente,
eng_pedido_link  |        TPED.empno                                               AS empno,
eng_pedido_link  |        TPED.VENDEDOR                                            AS vendedor,
eng_pedido_link  |        P.status                                                 AS status,
eng_pedido_link  |        IF(coalesce(statusCon, statusOut, '') = 'CON', 'S', 'N') AS confirmado,
eng_pedido_link  |        IFNULL(senha, '')                                        AS senhaVendedor,
eng_pedido_link  |        P.c1                                                     AS marca,
eng_pedido_link  |        P.s16                                                    AS userLink,
eng_pedido_link  |        PARCELAS                                                 AS parcelas,
eng_pedido_link  |        AUTORIZADORA                                             AS autorizadora,
eng_pedido_link  |        AUTORIZACAO                                              AS autorizacao,
eng_pedido_link  |        NSUHOST                                                  AS nsuHost,
eng_pedido_link  |        DATACRIACAO                                              AS dataTef,
eng_pedido_link  |        coalesce(statusCon, statusOut, '')                       AS statusTef
eng_pedido_link  | FROM sqldados.eord          AS P
eng_pedido_link  |   LEFT JOIN  sqldados.TTEF  AS T
eng_pedido_link  | 	       USING (ordno)
eng_pedido_link  |   INNER JOIN sqldados.custp AS C
eng_pedido_link  | 	       ON C.no = P.custno
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS N
eng_pedido_link  | 	       ON N.storeno = P.storeno AND N.nfno = P.nfno AND N.nfse = P.nfse
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS N2
eng_pedido_link  | 	       ON N.storeno = N2.storeno AND N.pdvno = N2.pdvno AND N.xano = N2.xano
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS F
eng_pedido_link  | 	       ON F.storeno = P.storeno AND F.nfno = P.nfno_futura AND F.nfse = P.nfse_futura
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS F2
eng_pedido_link  | 	       ON F.storeno = F2.storeno AND F.pdvno = F2.pdvno AND F.xano = F2.xano
eng_pedido_link  |   INNER JOIN sqldados.users AS U
eng_pedido_link  | 	       ON U.no = P.userno
eng_pedido_link  |   INNER JOIN sqldados.paym  AS PM
eng_pedido_link  | 	       ON PM.no = P.paymno
eng_pedido_link  |   INNER JOIN sqldados.TPED
eng_pedido_link  | 	       ON TPED.storeno = P.storeno AND TPED.ordno = P.ordno
eng_pedido_link  | WHERE PM.sname LIKE '%LINK%'
eng_pedido_link  |   AND P.date >= :data
eng_pedido_link  |   AND P.status <> 5
eng_pedido_link  |   AND (P.storeno = :storeno OR :storeno = 0)
eng_pedido_link  | GROUP BY P.ordno, P.storeno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TABLE IF EXISTS sqldados.T_EMP
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.T_EMP (
eng_pedido_link  |   PRIMARY KEY (empno)
eng_pedido_link  | )
eng_pedido_link  | SELECT no                                                            AS empno,
eng_pedido_link  |        name                                                          AS empName,
eng_pedido_link  |        sname                                                         AS empSname,
eng_pedido_link  |        trim(cast(CONCAT(CHAR(ascii(mid(pswd, 1, 1)) - 5), CHAR(ascii(mid(pswd, 2, 1)) - 7),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 3, 1)) - 8), CHAR(ascii(mid(pswd, 4, 1)) - 0),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 5, 1)) - 34), CHAR(ascii(mid(pswd, 6, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 7, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 8, 1)) - 13)) AS CHAR)) AS senha
eng_pedido_link  | FROM sqldados.emp
eng_pedido_link  | WHERE pswd <> ''
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TEMPORARY TABLE IF EXISTS sqldados.TPED
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TPED (
eng_pedido_link  |   PRIMARY KEY (storeno, ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT 'Link de pagamento loja ENGECOPI Ped MF'                                         AS note,
eng_pedido_link  |        eord.storeno,
eng_pedido_link  |        eord.ordno,
eng_pedido_link  |        CONCAT(eord.nfno, '/', eord.nfse)                                                AS NFiscal,
eng_pedido_link  |        CONCAT(eord.nfno_futura, '/', eord.nfse_futura)                                  AS NF_Fat,
eng_pedido_link  |        eord.amount                                                                      AS valor,
eng_pedido_link  |        IF(eord.other = 0, MID(eordrk.remarks__480, 7, 10), eord.other) / 100            AS frete,
eng_pedido_link  |        UPPER(TRIM(MID(eordrk.remarks__480, 160, 10)))                                   AS CARTAO,
eng_pedido_link  |        (eord.amount + IF(eord.other = 0, (MID(eordrk.remarks__480, 7, 2) * 100), eord.other)) /
eng_pedido_link  |        100                                                                              AS total,
eng_pedido_link  |        CONCAT(paym.no, '-', paym.sname)                                                 AS MET,
eng_pedido_link  |        emp.empno                                                                        AS empno,
eng_pedido_link  |        LPAD(emp.empSname, 10, ' ')                                                      AS VENDEDOR,
eng_pedido_link  |        IF(custp.auxString2 = 'J', LPAD(custp.tel, 9, ' '), LPAD(custp.celular, 9, ' ')) AS WHATSAPP,
eng_pedido_link  |        ifnull(custp.name, '*')                                                          AS CLIENTE,
eng_pedido_link  |        custp.no                                                                         AS CODCLI,
eng_pedido_link  |        eord.amount / 100                                                                AS amount,
eng_pedido_link  |        emp.senha                                                                        AS senha
eng_pedido_link  | FROM sqldados.eord
eng_pedido_link  |   LEFT JOIN sqldados.eoprd
eng_pedido_link  | 	      ON (eoprd.storeno = eord.storeno AND eoprd.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.prd
eng_pedido_link  | 	      ON (prd.no = eoprd.prdno)
eng_pedido_link  |   LEFT JOIN sqldados.custp
eng_pedido_link  | 	      ON (custp.no = eord.custno)
eng_pedido_link  |   LEFT JOIN sqldados.eordrk
eng_pedido_link  | 	      ON (eordrk.storeno = eord.storeno AND eordrk.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.paym
eng_pedido_link  | 	      ON (paym.no = eord.paymno)
eng_pedido_link  |   LEFT JOIN sqldados.T_EMP AS emp
eng_pedido_link  | 	      ON (emp.empno = eord.empno)
eng_pedido_link  | WHERE (eord.storeno = :storeno OR :storeno = 0)
eng_pedido_link  |   AND paym.sname LIKE '%LINK%'
eng_pedido_link  |   AND (eord.date >= :data)
eng_pedido_link  | GROUP BY eord.storeno, eord.ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TABLE IF EXISTS sqldados.TTEF
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TTEF (
eng_pedido_link  |   PRIMARY KEY (ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT MID(PEDIDO, 1, 2)                                   AS loja,
eng_pedido_link  |        MID(PEDIDO, 4, 100) * 1                             AS ordno,
eng_pedido_link  |        PEDIDO                                              AS PEDIDO,
eng_pedido_link  |        SUM(VALOR / 100)                                    AS VALOR,
eng_pedido_link  |        PARCELAS                                            AS PARCELAS,
eng_pedido_link  |        NOMEAUTORIZADORA                                    AS AUTORIZADORA,
eng_pedido_link  |        AUTORIZACAO                                         AS AUTORIZACAO,
eng_pedido_link  |        NSUHOST                                             AS NSUHOST,
eng_pedido_link  |        MAX(IF(STATUS IN ('CON', 'AGU'), STATUS, NULL))     AS statusCon,
eng_pedido_link  |        MAX(IF(STATUS NOT IN ('CON', 'AGU'), STATUS, NULL)) AS statusOut,
eng_pedido_link  | 
eng_pedido_link  |        cast(CONCAT(MID(DATACRIACAO, 7, 4), MID(DATACRIACAO, 4, 2), MID(DATACRIACAO, 1, 2)) *
eng_pedido_link  | 	    1 AS DATE)                                     AS DATACRIACAO
eng_pedido_link  | FROM sqldados.engecopi_tef_bruto AS B
eng_pedido_link  | WHERE nsu > date_format(:data, '%y%m%d') * 1000000000
eng_pedido_link  | GROUP BY ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | SELECT P.storeno                                                AS loja,
eng_pedido_link  |        P.ordno                                                  AS numPedido,
eng_pedido_link  |        IF(P.date = 0, NULL, cast(P.date AS DATE))               AS dataPedido,
eng_pedido_link  |        SEC_TO_TIME(P.l4)                                        AS horaPedido,
eng_pedido_link  |        P.paymno                                                 AS metodo,
eng_pedido_link  |        ifnull(cast(IFNULL(N.nfno, F.nfno) AS CHAR), '')         AS nfnoNota,
eng_pedido_link  |        IFNULL(IFNULL(N.nfse, F.nfse), '')                       AS nfseNota,
eng_pedido_link  |        if(IFNULL(N.issuedate, F.issuedate) = 0, NULL,
eng_pedido_link  | 	  cast(IFNULL(N.issuedate, F.issuedate) AS DATE))       AS dataNota,
eng_pedido_link  |        sec_to_time(IFNULL(N2.auxLong4, F2.auxLong4))            AS horaNota,
eng_pedido_link  |        IFNULL(U.name, '')                                       AS username,
eng_pedido_link  |        cast(if(P.l15 = 0, NULL, P.l15) AS DATE)                 AS dataLink,
eng_pedido_link  |        IF(P.l16 = 0, cast(NULL AS TIME), sec_to_time(P.l16))    AS horaLink,
eng_pedido_link  |        note                                                     AS nota,
eng_pedido_link  |        frete                                                    AS valorFrete,
eng_pedido_link  |        IF(frete IS NULL, TPED.amount, total)                    AS total,
eng_pedido_link  |        IFNULL(T.VALOR, 0.00)                                    AS valorLink,
eng_pedido_link  |        cartao                                                   AS cartao,
eng_pedido_link  |        cast(WHATSAPP AS CHAR)                                   AS whatsapp,
eng_pedido_link  |        CLIENTE                                                  AS cliente,
eng_pedido_link  |        TPED.empno                                               AS empno,
eng_pedido_link  |        TPED.VENDEDOR                                            AS vendedor,
eng_pedido_link  |        P.status                                                 AS status,
eng_pedido_link  |        IF(coalesce(statusCon, statusOut, '') = 'CON', 'S', 'N') AS confirmado,
eng_pedido_link  |        IFNULL(senha, '')                                        AS senhaVendedor,
eng_pedido_link  |        P.c1                                                     AS marca,
eng_pedido_link  |        P.s16                                                    AS userLink,
eng_pedido_link  |        PARCELAS                                                 AS parcelas,
eng_pedido_link  |        AUTORIZADORA                                             AS autorizadora,
eng_pedido_link  |        AUTORIZACAO                                              AS autorizacao,
eng_pedido_link  |        NSUHOST                                                  AS nsuHost,
eng_pedido_link  |        DATACRIACAO                                              AS dataTef,
eng_pedido_link  |        coalesce(statusCon, statusOut, '')                       AS statusTef
eng_pedido_link  | FROM sqldados.eord          AS P
eng_pedido_link  |   LEFT JOIN  sqldados.TTEF  AS T
eng_pedido_link  | 	       USING (ordno)
eng_pedido_link  |   INNER JOIN sqldados.custp AS C
eng_pedido_link  | 	       ON C.no = P.custno
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS N
eng_pedido_link  | 	       ON N.storeno = P.storeno AND N.nfno = P.nfno AND N.nfse = P.nfse
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS N2
eng_pedido_link  | 	       ON N.storeno = N2.storeno AND N.pdvno = N2.pdvno AND N.xano = N2.xano
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS F
eng_pedido_link  | 	       ON F.storeno = P.storeno AND F.nfno = P.nfno_futura AND F.nfse = P.nfse_futura
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS F2
eng_pedido_link  | 	       ON F.storeno = F2.storeno AND F.pdvno = F2.pdvno AND F.xano = F2.xano
eng_pedido_link  |   INNER JOIN sqldados.users AS U
eng_pedido_link  | 	       ON U.no = P.userno
eng_pedido_link  |   INNER JOIN sqldados.paym  AS PM
eng_pedido_link  | 	       ON PM.no = P.paymno
eng_pedido_link  |   INNER JOIN sqldados.TPED
eng_pedido_link  | 	       ON TPED.storeno = P.storeno AND TPED.ordno = P.ordno
eng_pedido_link  | WHERE PM.sname LIKE '%LINK%'
eng_pedido_link  |   AND P.date >= :data
eng_pedido_link  |   AND P.status <> 5
eng_pedido_link  |   AND (P.storeno = :storeno OR :storeno = 0)
eng_pedido_link  | GROUP BY P.ordno, P.storeno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | SELECT U.no,
eng_pedido_link  |        U.name,
eng_pedido_link  |        login,
eng_pedido_link  |        auxLong1 as storeno,
eng_pedido_link  |        IFNULL(cast(concat(CHAR(ascii(SUBSTRING(pswd, 1, 1)) + ascii('e') - ascii('j')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 2, 1)) + ascii('a') - ascii('h')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 3, 1)) + ascii('c') - ascii('k')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 4, 1)) + ascii(' ') - ascii(' ')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 5, 1)) + ascii(' ') - ascii('B')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 6, 1)) + ascii(' ') - ascii(')')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 7, 1)) + ascii(' ') - ascii(')')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 8, 1)) + ascii(' ') - ascii('-'))) AS CHAR),
eng_pedido_link  | 	      '') AS senha,
eng_pedido_link  |        bits2      AS bitAcesso,
eng_pedido_link  |        U.prntno   AS prntno,
eng_pedido_link  |        P.name     AS impressora
eng_pedido_link  | FROM sqldados.users        AS U
eng_pedido_link  |   LEFT JOIN sqldados.prntr AS P
eng_pedido_link  | 	      ON P.no = U.prntno
eng_pedido_link  | WHERE login = :login
eng_pedido_link  |    OR :login = 'TODOS'
eng_pedido_link  | SELECT U.no,
eng_pedido_link  |        U.name,
eng_pedido_link  |        login,
eng_pedido_link  |        auxLong1 as storeno,
eng_pedido_link  |        IFNULL(cast(concat(CHAR(ascii(SUBSTRING(pswd, 1, 1)) + ascii('e') - ascii('j')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 2, 1)) + ascii('a') - ascii('h')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 3, 1)) + ascii('c') - ascii('k')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 4, 1)) + ascii(' ') - ascii(' ')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 5, 1)) + ascii(' ') - ascii('B')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 6, 1)) + ascii(' ') - ascii(')')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 7, 1)) + ascii(' ') - ascii(')')),
eng_pedido_link  | 			  CHAR(ascii(SUBSTRING(pswd, 8, 1)) + ascii(' ') - ascii('-'))) AS CHAR),
eng_pedido_link  | 	      '') AS senha,
eng_pedido_link  |        bits2      AS bitAcesso,
eng_pedido_link  |        U.prntno   AS prntno,
eng_pedido_link  |        P.name     AS impressora
eng_pedido_link  | FROM sqldados.users        AS U
eng_pedido_link  |   LEFT JOIN sqldados.prntr AS P
eng_pedido_link  | 	      ON P.no = U.prntno
eng_pedido_link  | WHERE login = :login
eng_pedido_link  |    OR :login = 'TODOS'
eng_pedido_link  | DROP TABLE IF EXISTS sqldados.T_EMP
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.T_EMP (
eng_pedido_link  |   PRIMARY KEY (empno)
eng_pedido_link  | )
eng_pedido_link  | SELECT no                                                            AS empno,
eng_pedido_link  |        name                                                          AS empName,
eng_pedido_link  |        sname                                                         AS empSname,
eng_pedido_link  |        trim(cast(CONCAT(CHAR(ascii(mid(pswd, 1, 1)) - 5), CHAR(ascii(mid(pswd, 2, 1)) - 7),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 3, 1)) - 8), CHAR(ascii(mid(pswd, 4, 1)) - 0),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 5, 1)) - 34), CHAR(ascii(mid(pswd, 6, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 7, 1)) - 9),
eng_pedido_link  | 			CHAR(ascii(mid(pswd, 8, 1)) - 13)) AS CHAR)) AS senha
eng_pedido_link  | FROM sqldados.emp
eng_pedido_link  | WHERE pswd <> ''
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TEMPORARY TABLE IF EXISTS sqldados.TPED
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TPED (
eng_pedido_link  |   PRIMARY KEY (storeno, ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT 'Link de pagamento loja ENGECOPI Ped MF'                                         AS note,
eng_pedido_link  |        eord.storeno,
eng_pedido_link  |        eord.ordno,
eng_pedido_link  |        CONCAT(eord.nfno, '/', eord.nfse)                                                AS NFiscal,
eng_pedido_link  |        CONCAT(eord.nfno_futura, '/', eord.nfse_futura)                                  AS NF_Fat,
eng_pedido_link  |        eord.amount                                                                      AS valor,
eng_pedido_link  |        IF(eord.other = 0, MID(eordrk.remarks__480, 7, 10), eord.other) / 100            AS frete,
eng_pedido_link  |        UPPER(TRIM(MID(eordrk.remarks__480, 160, 10)))                                   AS CARTAO,
eng_pedido_link  |        (eord.amount + IF(eord.other = 0, (MID(eordrk.remarks__480, 7, 2) * 100), eord.other)) /
eng_pedido_link  |        100                                                                              AS total,
eng_pedido_link  |        CONCAT(paym.no, '-', paym.sname)                                                 AS MET,
eng_pedido_link  |        emp.empno                                                                        AS empno,
eng_pedido_link  |        LPAD(emp.empSname, 10, ' ')                                                      AS VENDEDOR,
eng_pedido_link  |        IF(custp.auxString2 = 'J', LPAD(custp.tel, 9, ' '), LPAD(custp.celular, 9, ' ')) AS WHATSAPP,
eng_pedido_link  |        ifnull(custp.name, '*')                                                          AS CLIENTE,
eng_pedido_link  |        custp.no                                                                         AS CODCLI,
eng_pedido_link  |        eord.amount / 100                                                                AS amount,
eng_pedido_link  |        emp.senha                                                                        AS senha
eng_pedido_link  | FROM sqldados.eord
eng_pedido_link  |   LEFT JOIN sqldados.eoprd
eng_pedido_link  | 	      ON (eoprd.storeno = eord.storeno AND eoprd.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.prd
eng_pedido_link  | 	      ON (prd.no = eoprd.prdno)
eng_pedido_link  |   LEFT JOIN sqldados.custp
eng_pedido_link  | 	      ON (custp.no = eord.custno)
eng_pedido_link  |   LEFT JOIN sqldados.eordrk
eng_pedido_link  | 	      ON (eordrk.storeno = eord.storeno AND eordrk.ordno = eord.ordno)
eng_pedido_link  |   LEFT JOIN sqldados.paym
eng_pedido_link  | 	      ON (paym.no = eord.paymno)
eng_pedido_link  |   LEFT JOIN sqldados.T_EMP AS emp
eng_pedido_link  | 	      ON (emp.empno = eord.empno)
eng_pedido_link  | WHERE (eord.storeno = :storeno OR :storeno = 0)
eng_pedido_link  |   AND paym.sname LIKE '%LINK%'
eng_pedido_link  |   AND (eord.date >= :data)
eng_pedido_link  | GROUP BY eord.storeno, eord.ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | DROP TABLE IF EXISTS sqldados.TTEF
eng_pedido_link  | 
eng_pedido_link  | CREATE TEMPORARY TABLE sqldados.TTEF (
eng_pedido_link  |   PRIMARY KEY (ordno)
eng_pedido_link  | )
eng_pedido_link  | SELECT MID(PEDIDO, 1, 2)                                   AS loja,
eng_pedido_link  |        MID(PEDIDO, 4, 100) * 1                             AS ordno,
eng_pedido_link  |        PEDIDO                                              AS PEDIDO,
eng_pedido_link  |        SUM(VALOR / 100)                                    AS VALOR,
eng_pedido_link  |        PARCELAS                                            AS PARCELAS,
eng_pedido_link  |        NOMEAUTORIZADORA                                    AS AUTORIZADORA,
eng_pedido_link  |        AUTORIZACAO                                         AS AUTORIZACAO,
eng_pedido_link  |        NSUHOST                                             AS NSUHOST,
eng_pedido_link  |        MAX(IF(STATUS IN ('CON', 'AGU'), STATUS, NULL))     AS statusCon,
eng_pedido_link  |        MAX(IF(STATUS NOT IN ('CON', 'AGU'), STATUS, NULL)) AS statusOut,
eng_pedido_link  | 
eng_pedido_link  |        cast(CONCAT(MID(DATACRIACAO, 7, 4), MID(DATACRIACAO, 4, 2), MID(DATACRIACAO, 1, 2)) *
eng_pedido_link  | 	    1 AS DATE)                                     AS DATACRIACAO
eng_pedido_link  | FROM sqldados.engecopi_tef_bruto AS B
eng_pedido_link  | WHERE nsu > date_format(:data, '%y%m%d') * 1000000000
eng_pedido_link  | GROUP BY ordno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | SELECT P.storeno                                                AS loja,
eng_pedido_link  |        P.ordno                                                  AS numPedido,
eng_pedido_link  |        IF(P.date = 0, NULL, cast(P.date AS DATE))               AS dataPedido,
eng_pedido_link  |        SEC_TO_TIME(P.l4)                                        AS horaPedido,
eng_pedido_link  |        P.paymno                                                 AS metodo,
eng_pedido_link  |        ifnull(cast(IFNULL(N.nfno, F.nfno) AS CHAR), '')         AS nfnoNota,
eng_pedido_link  |        IFNULL(IFNULL(N.nfse, F.nfse), '')                       AS nfseNota,
eng_pedido_link  |        if(IFNULL(N.issuedate, F.issuedate) = 0, NULL,
eng_pedido_link  | 	  cast(IFNULL(N.issuedate, F.issuedate) AS DATE))       AS dataNota,
eng_pedido_link  |        sec_to_time(IFNULL(N2.auxLong4, F2.auxLong4))            AS horaNota,
eng_pedido_link  |        IFNULL(U.name, '')                                       AS username,
eng_pedido_link  |        cast(if(P.l15 = 0, NULL, P.l15) AS DATE)                 AS dataLink,
eng_pedido_link  |        IF(P.l16 = 0, cast(NULL AS TIME), sec_to_time(P.l16))    AS horaLink,
eng_pedido_link  |        note                                                     AS nota,
eng_pedido_link  |        frete                                                    AS valorFrete,
eng_pedido_link  |        IF(frete IS NULL, TPED.amount, total)                    AS total,
eng_pedido_link  |        IFNULL(T.VALOR, 0.00)                                    AS valorLink,
eng_pedido_link  |        cartao                                                   AS cartao,
eng_pedido_link  |        cast(WHATSAPP AS CHAR)                                   AS whatsapp,
eng_pedido_link  |        CLIENTE                                                  AS cliente,
eng_pedido_link  |        TPED.empno                                               AS empno,
eng_pedido_link  |        TPED.VENDEDOR                                            AS vendedor,
eng_pedido_link  |        P.status                                                 AS status,
eng_pedido_link  |        IF(coalesce(statusCon, statusOut, '') = 'CON', 'S', 'N') AS confirmado,
eng_pedido_link  |        IFNULL(senha, '')                                        AS senhaVendedor,
eng_pedido_link  |        P.c1                                                     AS marca,
eng_pedido_link  |        P.s16                                                    AS userLink,
eng_pedido_link  |        PARCELAS                                                 AS parcelas,
eng_pedido_link  |        AUTORIZADORA                                             AS autorizadora,
eng_pedido_link  |        AUTORIZACAO                                              AS autorizacao,
eng_pedido_link  |        NSUHOST                                                  AS nsuHost,
eng_pedido_link  |        DATACRIACAO                                              AS dataTef,
eng_pedido_link  |        coalesce(statusCon, statusOut, '')                       AS statusTef
eng_pedido_link  | FROM sqldados.eord          AS P
eng_pedido_link  |   LEFT JOIN  sqldados.TTEF  AS T
eng_pedido_link  | 	       USING (ordno)
eng_pedido_link  |   INNER JOIN sqldados.custp AS C
eng_pedido_link  | 	       ON C.no = P.custno
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS N
eng_pedido_link  | 	       ON N.storeno = P.storeno AND N.nfno = P.nfno AND N.nfse = P.nfse
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS N2
eng_pedido_link  | 	       ON N.storeno = N2.storeno AND N.pdvno = N2.pdvno AND N.xano = N2.xano
eng_pedido_link  |   LEFT JOIN  sqldados.nf    AS F
eng_pedido_link  | 	       ON F.storeno = P.storeno AND F.nfno = P.nfno_futura AND F.nfse = P.nfse_futura
eng_pedido_link  |   LEFT JOIN  sqldados.nf2   AS F2
eng_pedido_link  | 	       ON F.storeno = F2.storeno AND F.pdvno = F2.pdvno AND F.xano = F2.xano
eng_pedido_link  |   INNER JOIN sqldados.users AS U
eng_pedido_link  | 	       ON U.no = P.userno
eng_pedido_link  |   INNER JOIN sqldados.paym  AS PM
eng_pedido_link  | 	       ON PM.no = P.paymno
eng_pedido_link  |   INNER JOIN sqldados.TPED
eng_pedido_link  | 	       ON TPED.storeno = P.storeno AND TPED.ordno = P.ordno
eng_pedido_link  | WHERE PM.sname LIKE '%LINK%'
eng_pedido_link  |   AND P.date >= :data
eng_pedido_link  |   AND P.status <> 5
eng_pedido_link  |   AND (P.storeno = :storeno OR :storeno = 0)
eng_pedido_link  | GROUP BY P.ordno, P.storeno
eng_pedido_link  | 
eng_pedido_link  | 
eng_pedido_link  | 2020-07-22 08:33:59.136 ERROR 1 --- [nio-8080-exec-8] c.v.flow.server.DefaultErrorHandler      : 
eng_pedido_link  | 
eng_pedido_link  | org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:372) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:811) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:740) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:407) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:385) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645) ~[spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645) ~[spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) ~[na:1.8.0_242]
eng_pedido_link  | 	at java.io.OutputStreamWriter.write(OutputStreamWriter.java:207) ~[na:1.8.0_242]
eng_pedido_link  | 	at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:129) ~[na:1.8.0_242]
eng_pedido_link  | 	at java.io.BufferedWriter.write(BufferedWriter.java:230) ~[na:1.8.0_242]
eng_pedido_link  | 	at java.io.Writer.write(Writer.java:157) ~[na:1.8.0_242]
eng_pedido_link  | 	at java.io.Writer.append(Writer.java:227) ~[na:1.8.0_242]
eng_pedido_link  | 	at com.vaadin.flow.server.BootstrapHandler.writeBootstrapPage(BootstrapHandler.java:492) ~[flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 	at com.vaadin.flow.server.BootstrapHandler.synchronizedHandleRequest(BootstrapHandler.java:481) ~[flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 	at com.vaadin.flow.server.SynchronizedRequestHandler.handleRequest(SynchronizedRequestHandler.java:40) ~[flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 	at com.vaadin.flow.server.VaadinService.handleRequest(VaadinService.java:1545) ~[flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 	at com.vaadin.flow.server.VaadinServlet.service(VaadinServlet.java:247) [flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 	at com.vaadin.flow.spring.SpringServlet.service(SpringServlet.java:108) [vaadin-spring-12.3.0.jar:na]
eng_pedido_link  | 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [servlet-api.jar:na]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:470) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:356) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.web.servlet.mvc.ServletForwardingController.handleRequestInternal(ServletForwardingController.java:141) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [servlet-api.jar:na]
eng_pedido_link  | 	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [servlet-api.jar:na]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:128) [spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]
eng_pedido_link  | 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.access$000(ErrorPageFilter.java:66) [spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]
eng_pedido_link  | 	at org.springframework.boot.web.servlet.support.ErrorPageFilter$1.doFilterInternal(ErrorPageFilter.java:103) [spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.boot.web.servlet.support.ErrorPageFilter.doFilter(ErrorPageFilter.java:121) [spring-boot-2.3.1.RELEASE.jar:2.3.1.RELEASE]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.7.RELEASE.jar:5.2.7.RELEASE]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [catalina.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609) [tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818) [tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623) [tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_242]
eng_pedido_link  | 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_242]
eng_pedido_link  | 	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.51]
eng_pedido_link  | 	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_242]
eng_pedido_link  | 	Suppressed: org.apache.catalina.connector.ClientAbortException: java.io.IOException: Broken pipe
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:372) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:811) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:740) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:407) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:385) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96) ~[catalina.jar:8.5.51]
eng_pedido_link  | 		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645) ~[spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 		at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:645) ~[spring-security-web-5.3.3.RELEASE.jar:5.3.3.RELEASE]
eng_pedido_link  | 		at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221) ~[na:1.8.0_242]
eng_pedido_link  | 		at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282) ~[na:1.8.0_242]
eng_pedido_link  | 		at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125) ~[na:1.8.0_242]
eng_pedido_link  | 		at java.io.OutputStreamWriter.write(OutputStreamWriter.java:207) ~[na:1.8.0_242]
eng_pedido_link  | 		at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:129) ~[na:1.8.0_242]
eng_pedido_link  | 		at java.io.BufferedWriter.close(BufferedWriter.java:265) ~[na:1.8.0_242]
eng_pedido_link  | 		at com.vaadin.flow.server.BootstrapHandler.writeBootstrapPage(BootstrapHandler.java:493) ~[flow-server-2.3.0.jar:2.3.0]
eng_pedido_link  | 		... 96 common frames omitted
eng_pedido_link  | 	Caused by: java.io.IOException: Broken pipe
eng_pedido_link  | 		at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
eng_pedido_link  | 		at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)
eng_pedido_link  | 		at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
eng_pedido_link  | 		at sun.nio.ch.IOUtil.write(IOUtil.java:65)
eng_pedido_link  | 		at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:468)
eng_pedido_link  | 		at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:136)
eng_pedido_link  | 		at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
eng_pedido_link  | 		at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
eng_pedido_link  | 		at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1308)
eng_pedido_link  | 		at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:692)
eng_pedido_link  | 		at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:512)
eng_pedido_link  | 		at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:456)
eng_pedido_link  | 		at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:623)
eng_pedido_link  | 		at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:121)
eng_pedido_link  | 		at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:225)
eng_pedido_link  | 		at org.apache.coyote.Response.doWrite(Response.java:600)
eng_pedido_link  | 		at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:360)
eng_pedido_link  | 		... 110 common frames omitted
eng_pedido_link  | Caused by: java.io.IOException: Broken pipe
eng_pedido_link  | 	at sun.nio.ch.FileDispatcherImpl.write0(Native Method) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_242]
eng_pedido_link  | 	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:468) ~[na:1.8.0_242]
eng_pedido_link  | 	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:136) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1308) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:692) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:512) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:456) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:623) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite(ChunkedOutputFilter.java:121) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:225) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.coyote.Response.doWrite(Response.java:600) ~[tomcat-coyote.jar:8.5.51]
eng_pedido_link  | 	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:360) ~[catalina.jar:8.5.51]
eng_pedido_link  | 	... 112 common frames omitted
eng_pedido_link  | 
